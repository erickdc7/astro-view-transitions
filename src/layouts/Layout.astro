---
export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description">
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<title>{title}</title>
		<meta name="view-transition" content="same-origin" />
	</head>
	<body>
		<div id="content">
			<slot />
		</div>
		<footer class="text-center opacity-70 py-10 text-sm">
			Basado en el trabajo de <a class="text-sky-700 hover:underline" href='https://twitter.com/addyosmani/status/1673755274853900289?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Etweet%7Ctwtr%5Etrue'>Addy Osmani</a>
		</footer>
	</body>
</html>
<style is:global>
	:root {
		--accent: 124, 58, 237;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #da62c4 30%, white 60%);
	}
	html {
		font-family: system-ui, sans-serif;
		background-color: #F6F6F6;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}

	@keyframes fade-in {
		from { opacity: 0; }
	}
</style>

<script>
if (document.startViewTransition) {
    window.navigation.addEventListener('navigate', async (event) => {
        const toUrl = new URL(event.destination.url);

        // es una página externa? si es así, lo ignoramos
        if (location.origin !== toUrl.origin) return;

        // si es una navegación en el mismo dominio (origen)
        event.intercept({
            async handler() {
                try {
                    const response = await fetch(toUrl.pathname);
                    if (!response.ok) {
                        throw new Error(`Error fetching ${toUrl.pathname}: ${response.status} ${response.statusText}`);
                    }

                    const text = await response.text();
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(text, 'text/html');

                    // Obtener el contenido del cuerpo
                    const bodyContent = doc.body.innerHTML;

                    document.startViewTransition(() => {
                        // el scroll hacia arriba del todo
                        // Utilizar innerHTML para establecer el contenido del cuerpo
                        document.body.innerHTML = bodyContent;
                        document.documentElement.scrollTop = 0;
                    });
                } catch (error) {
                    console.error('Error during navigation:', error);
                    // Manejar el error de manera apropiada (por ejemplo, mostrar un mensaje al usuario).
                }
            },
        });
    });
}


</script>